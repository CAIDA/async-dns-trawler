from typing import Any

from pydgraph import DgraphClient
from pydgraph import errors as errors
from pydgraph import util as util
from pydgraph.meta import VERSION as VERSION
from pydgraph.proto.api_pb2 import Mutation, Request, Response

__maintainer__: str
__status__: str

class Txn:
    def __init__(self, client:DgraphClient, read_only: bool = ..., best_effort: bool = ...) -> None: ...
    def query(self, query:str, variables: Any | None = ..., timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ..., resp_format: str = ...)->Response: ...
    def async_query(self, query:str, variables: Any | None = ..., timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ..., resp_format: str = ...)->Any: ...
    def mutate(self, mutation: Mutation | None = ..., set_obj: Any | None = ..., del_obj: Any | None = ..., set_nquads: Any | None = ..., del_nquads: Any | None = ..., cond: Any | None = ..., commit_now: Any | None = ..., timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...)->Response: ...
    def async_mutate(self, mutation: Mutation | None = ..., set_obj: Any | None = ..., del_obj: Any | None = ..., set_nquads: Any | None = ..., del_nquads: Any | None = ..., cond: Any | None = ..., commit_now: Any | None = ..., timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...)->Any: ...
    def do_request(self, request:Request, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...)->Response: ...
    def async_do_request(self, request:Request, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...)->Any: ...
    @staticmethod
    def handle_query_future(future:Any)->Response: ...
    @staticmethod
    def handle_mutate_future(txn:Txn, future:Any, commit_now:bool|None)->Response: ...
    def create_mutation(self, mutation: Mutation | None = ..., set_obj: Any | None = ..., del_obj: Any | None = ..., set_nquads: Any | None = ..., del_nquads: Any | None = ..., cond: Any | None = ...)->Mutation: ...
    def create_request(self, query: str | None = ..., variables: Any | None = ..., mutations: Any | None = ..., commit_now: Any | None = ..., resp_format: str = ...)->Request: ...
    def commit(self, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...)->Response: ...
    def discard(self, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...) -> None: ...
    def merge_context(self, src: Any | None = ...) -> None: ...
    def retry_login(self) -> None: ...
