from typing import Any

from pydgraph import Operation
from pydgraph import errors as errors
from pydgraph import txn as txn
from pydgraph import util as util
from pydgraph.client_stub import DgraphClientStub
from pydgraph.meta import VERSION as VERSION
from pydgraph.proto.api_pb2 import Response
from pydgraph.txn import Txn

__maintainer__: str
__status__: str

class DgraphClient:
    def __init__(self, *clients:DgraphClientStub) -> None: ...
    def check_version(self, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...) -> str: ...
    def login(self, userid:Any, password:Any, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...) -> None: ...
    def login_into_namespace(self, userid:Any, password:Any, namespace:Any, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...) -> None: ...
    def retry_login(self, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...) -> None: ...
    def alter(self, operation:Operation, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...)->Response: ...
    def async_alter(self, operation:Operation, timeout: float | None = ..., metadata: Any | None = ..., credentials: Any | None = ...) -> Any: ...
    @staticmethod
    def handle_alter_future(future:Any) -> Response: ...
    def txn(self, read_only: bool = ..., best_effort: bool = ...) -> Txn: ...
    def any_client(self)->DgraphClientStub: ...
    def add_login_metadata(self, metadata:Any)->Any: ...
